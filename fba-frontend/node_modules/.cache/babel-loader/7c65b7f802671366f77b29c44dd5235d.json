{"ast":null,"code":"import _classCallCheck from \"D:\\\\Personal Projects\\\\Fantasy-Project\\\\fba-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Personal Projects\\\\Fantasy-Project\\\\fba-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport { ModelContext } from '../store/model-context';\nvar MODEL_API_BASE_URL = \"http://localhost:8080/api/v1/\";\nvar model = useContext(ModelContext);\n\nvar ModelService = /*#__PURE__*/function () {\n  function ModelService() {\n    _classCallCheck(this, ModelService);\n  }\n\n  _createClass(ModelService, [{\n    key: \"getPowerRankings\",\n    value: function getPowerRankings() {\n      console.log(model.leagueId);\n      return axios.get(MODEL_API_BASE_URL + \"rankings\");\n    }\n  }, {\n    key: \"createModel\",\n    value: function createModel(leagueId) {\n      return axios.post(MODEL_API_BASE_URL + \"create\", leagueId);\n    }\n  }, {\n    key: \"createDemo\",\n    value: function createDemo() {\n      return axios.post(MODEL_API_BASE_URL + \"demo\");\n    }\n  }, {\n    key: \"modelGenerated\",\n    value: function modelGenerated() {\n      return axios.post(MODEL_API_BASE_URL + \"request\");\n    }\n  }, {\n    key: \"getScheduleComparison\",\n    value: function getScheduleComparison() {\n      return axios.get(MODEL_API_BASE_URL + \"compareSchedules\");\n    }\n  }, {\n    key: \"getWeeklyComparison\",\n    value: function getWeeklyComparison() {\n      return axios.get(MODEL_API_BASE_URL + \"compareWeekly\");\n    }\n  }, {\n    key: \"getPlayoffRankings\",\n    value: function getPlayoffRankings() {\n      return axios.get(MODEL_API_BASE_URL + \"playoffRankings\");\n    }\n  }, {\n    key: \"getRemainingMatchupPeriods\",\n    value: function getRemainingMatchupPeriods() {\n      return axios.get(MODEL_API_BASE_URL + \"remainingMatchupPeriods\");\n    }\n  }, {\n    key: \"getAllMatchups\",\n    value: function getAllMatchups() {\n      return axios.get(MODEL_API_BASE_URL + \"allMatchups\");\n    }\n  }, {\n    key: \"getPlayoffMachineMatchups\",\n    value: function getPlayoffMachineMatchups() {\n      return axios.get(MODEL_API_BASE_URL + \"playoffMachineMatchups\");\n    }\n  }, {\n    key: \"setWinnerHome\",\n    value: function setWinnerHome(matchup) {\n      return axios.post(MODEL_API_BASE_URL + \"setWinnerHome\", matchup);\n    }\n  }, {\n    key: \"setWinnerAway\",\n    value: function setWinnerAway(matchup) {\n      return axios.post(MODEL_API_BASE_URL + \"setWinnerAway\", matchup);\n    }\n  }, {\n    key: \"setWinnerTie\",\n    value: function setWinnerTie(matchup) {\n      return axios.post(MODEL_API_BASE_URL + \"setWinnerTie\", matchup);\n    }\n  }, {\n    key: \"getIsSorted\",\n    value: function getIsSorted() {\n      return axios.get(MODEL_API_BASE_URL + \"isSorted\");\n    }\n  }, {\n    key: \"resetPlayoffMachine\",\n    value: function resetPlayoffMachine() {\n      return axios.post(MODEL_API_BASE_URL + \"resetPlayoffMachine\");\n    }\n  }, {\n    key: \"getProjectedScores\",\n    value: function getProjectedScores(timePeriod, matchupPeriod, assessInjuries) {\n      return axios.get(MODEL_API_BASE_URL + \"scoreProjections?timePeriod=\" + timePeriod + \"&matchupPeriod=\" + matchupPeriod + \"&assessInjuries=\" + assessInjuries);\n    }\n  }, {\n    key: \"getCurrentMatchupPeriod\",\n    value: function getCurrentMatchupPeriod() {\n      return axios.get(MODEL_API_BASE_URL + \"currentMatchupPeriod\");\n    }\n  }, {\n    key: \"getProTeamGames\",\n    value: function getProTeamGames(matchupPeriod) {\n      return axios.get(MODEL_API_BASE_URL + \"proTeamGames?matchupPeriod=\" + matchupPeriod);\n    }\n  }]);\n\n  return ModelService;\n}();\n\nexport default new ModelService();","map":{"version":3,"sources":["D:/Personal Projects/Fantasy-Project/fba-frontend/src/services/ModelService.js"],"names":["axios","useContext","ModelContext","MODEL_API_BASE_URL","model","ModelService","console","log","leagueId","get","post","matchup","timePeriod","matchupPeriod","assessInjuries"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,IAAMC,kBAAkB,GAAG,+BAA3B;AACA,IAAMC,KAAK,GAAGH,UAAU,CAACC,YAAD,CAAxB;;IAEMG,Y;;;;;;;uCACiB;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAlB;AACA,aAAOR,KAAK,CAACS,GAAN,CAAUN,kBAAkB,GAAG,UAA/B,CAAP;AACH;;;gCAEWK,Q,EAAU;AAClB,aAAOR,KAAK,CAACU,IAAN,CAAWP,kBAAkB,GAAG,QAAhC,EAA0CK,QAA1C,CAAP;AACH;;;iCAEY;AACT,aAAOR,KAAK,CAACU,IAAN,CAAWP,kBAAkB,GAAG,MAAhC,CAAP;AACH;;;qCAEgB;AACb,aAAOH,KAAK,CAACU,IAAN,CAAWP,kBAAkB,GAAG,SAAhC,CAAP;AACH;;;4CAEuB;AACpB,aAAOH,KAAK,CAACS,GAAN,CAAUN,kBAAkB,GAAG,kBAA/B,CAAP;AACH;;;0CAEqB;AAClB,aAAOH,KAAK,CAACS,GAAN,CAAUN,kBAAkB,GAAG,eAA/B,CAAP;AACH;;;yCAEoB;AACjB,aAAOH,KAAK,CAACS,GAAN,CAAUN,kBAAkB,GAAG,iBAA/B,CAAP;AACH;;;iDAE4B;AACzB,aAAOH,KAAK,CAACS,GAAN,CAAUN,kBAAkB,GAAG,yBAA/B,CAAP;AACH;;;qCAEgB;AACb,aAAOH,KAAK,CAACS,GAAN,CAAUN,kBAAkB,GAAG,aAA/B,CAAP;AACH;;;gDAE2B;AACxB,aAAOH,KAAK,CAACS,GAAN,CAAUN,kBAAkB,GAAG,wBAA/B,CAAP;AACH;;;kCAEaQ,O,EAAS;AACnB,aAAOX,KAAK,CAACU,IAAN,CAAWP,kBAAkB,GAAG,eAAhC,EAAiDQ,OAAjD,CAAP;AACH;;;kCAEaA,O,EAAS;AACnB,aAAOX,KAAK,CAACU,IAAN,CAAWP,kBAAkB,GAAG,eAAhC,EAAiDQ,OAAjD,CAAP;AACH;;;iCAEYA,O,EAAS;AAClB,aAAOX,KAAK,CAACU,IAAN,CAAWP,kBAAkB,GAAG,cAAhC,EAAgDQ,OAAhD,CAAP;AACH;;;kCACa;AACV,aAAOX,KAAK,CAACS,GAAN,CAAUN,kBAAkB,GAAG,UAA/B,CAAP;AACH;;;0CAEqB;AAClB,aAAOH,KAAK,CAACU,IAAN,CAAWP,kBAAkB,GAAG,qBAAhC,CAAP;AACH;;;uCAEkBS,U,EAAYC,a,EAAeC,c,EAAgB;AAC1D,aAAOd,KAAK,CAACS,GAAN,CAAUN,kBAAkB,GAAG,8BAArB,GAAsDS,UAAtD,GAAmE,iBAAnE,GAAuFC,aAAvF,GAAuG,kBAAvG,GAA4HC,cAAtI,CAAP;AACH;;;8CAEyB;AACtB,aAAOd,KAAK,CAACS,GAAN,CAAUN,kBAAkB,GAAG,sBAA/B,CAAP;AACH;;;oCAEeU,a,EAAe;AAC3B,aAAOb,KAAK,CAACS,GAAN,CAAUN,kBAAkB,GAAG,6BAArB,GAAqDU,aAA/D,CAAP;AACH;;;;;;AAGL,eAAe,IAAIR,YAAJ,EAAf","sourcesContent":["import axios from 'axios'\r\nimport { useContext } from 'react';\r\nimport { ModelContext } from '../store/model-context';\r\n\r\nconst MODEL_API_BASE_URL = \"http://localhost:8080/api/v1/\";\r\nconst model = useContext(ModelContext)\r\n\r\nclass ModelService {\r\n    getPowerRankings() {\r\n        console.log(model.leagueId)\r\n        return axios.get(MODEL_API_BASE_URL + \"rankings\");\r\n    }\r\n\r\n    createModel(leagueId) {\r\n        return axios.post(MODEL_API_BASE_URL + \"create\", leagueId);\r\n    }\r\n\r\n    createDemo() {\r\n        return axios.post(MODEL_API_BASE_URL + \"demo\");\r\n    }\r\n\r\n    modelGenerated() {\r\n        return axios.post(MODEL_API_BASE_URL + \"request\");\r\n    }\r\n\r\n    getScheduleComparison() {\r\n        return axios.get(MODEL_API_BASE_URL + \"compareSchedules\");\r\n    }\r\n\r\n    getWeeklyComparison() {\r\n        return axios.get(MODEL_API_BASE_URL + \"compareWeekly\");\r\n    }\r\n\r\n    getPlayoffRankings() {\r\n        return axios.get(MODEL_API_BASE_URL + \"playoffRankings\");\r\n    }\r\n\r\n    getRemainingMatchupPeriods() {\r\n        return axios.get(MODEL_API_BASE_URL + \"remainingMatchupPeriods\");\r\n    }\r\n\r\n    getAllMatchups() {\r\n        return axios.get(MODEL_API_BASE_URL + \"allMatchups\");\r\n    }\r\n\r\n    getPlayoffMachineMatchups() {\r\n        return axios.get(MODEL_API_BASE_URL + \"playoffMachineMatchups\");\r\n    }\r\n\r\n    setWinnerHome(matchup) {\r\n        return axios.post(MODEL_API_BASE_URL + \"setWinnerHome\", matchup);\r\n    }\r\n\r\n    setWinnerAway(matchup) {\r\n        return axios.post(MODEL_API_BASE_URL + \"setWinnerAway\", matchup);\r\n    }\r\n\r\n    setWinnerTie(matchup) {\r\n        return axios.post(MODEL_API_BASE_URL + \"setWinnerTie\", matchup)\r\n    }\r\n    getIsSorted() {\r\n        return axios.get(MODEL_API_BASE_URL + \"isSorted\");\r\n    }\r\n\r\n    resetPlayoffMachine() {\r\n        return axios.post(MODEL_API_BASE_URL + \"resetPlayoffMachine\");\r\n    }\r\n\r\n    getProjectedScores(timePeriod, matchupPeriod, assessInjuries) {\r\n        return axios.get(MODEL_API_BASE_URL + \"scoreProjections?timePeriod=\" + timePeriod + \"&matchupPeriod=\" + matchupPeriod + \"&assessInjuries=\" + assessInjuries);\r\n    }\r\n\r\n    getCurrentMatchupPeriod() {\r\n        return axios.get(MODEL_API_BASE_URL + \"currentMatchupPeriod\");\r\n    }\r\n\r\n    getProTeamGames(matchupPeriod) {\r\n        return axios.get(MODEL_API_BASE_URL + \"proTeamGames?matchupPeriod=\" + matchupPeriod);\r\n    }\r\n}\r\n\r\nexport default new ModelService()"]},"metadata":{},"sourceType":"module"}