{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Stephen Buck\\\\Documents\\\\personal-projects\\\\fba-project\\\\fba-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Stephen Buck\\\\Documents\\\\personal-projects\\\\fba-project\\\\fba-frontend\\\\src\\\\components\\\\projections\\\\ProjectionTable.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ModelService from '../../services/ModelService';\nimport classes from './ProjectionTable.module.css';\n\nfunction ProjectionTable(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      scores = _useState2[0],\n      setScores = _useState2[1];\n\n  useEffect(function () {\n    ModelService.getProjectedScores(props.timePeriod, props.matchupPeriod, props.assessInjuries).then(function (res) {\n      setScores(res.data);\n    });\n  }, [props.timePeriod, props.assessInjuries, props.matchupPeriod]);\n\n  if (typeof scores === 'undefined') {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, \"loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: classes.styledtable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }, \"Team Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, \"Projected Points\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, \"Games Left\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, scores.map(function (score) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: score.teamName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 41\n      }\n    }, score.teamName)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 37\n      }\n    }, \" \", score.points), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 37\n      }\n    }, \" \", score.totalGames));\n  }))));\n}\n\nexport default ProjectionTable;","map":{"version":3,"sources":["C:/Users/Stephen Buck/Documents/personal-projects/fba-project/fba-frontend/src/components/projections/ProjectionTable.jsx"],"names":["React","useState","useEffect","ModelService","classes","ProjectionTable","props","scores","setScores","getProjectedScores","timePeriod","matchupPeriod","assessInjuries","then","res","data","styledtable","map","score","teamName","points","totalGames"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAAA,kBACAL,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,MACrBM,MADqB;AAAA,MACbC,SADa;;AAK5BN,EAAAA,SAAS,CAAC,YAAM;AACbC,IAAAA,YAAY,CAACM,kBAAb,CAAgCH,KAAK,CAACI,UAAtC,EAAkDJ,KAAK,CAACK,aAAxD,EAAuEL,KAAK,CAACM,cAA7E,EAA6FC,IAA7F,CAAkG,UAACC,GAAD,EAAS;AACvGN,MAAAA,SAAS,CAACM,GAAG,CAACC,IAAL,CAAT;AACH,KAFD;AAGF,GAJQ,EAIN,CAACT,KAAK,CAACI,UAAP,EAAmBJ,KAAK,CAACM,cAAzB,EAAyCN,KAAK,CAACK,aAA/C,CAJM,CAAT;;AAOA,MAAI,OAAOJ,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAEH,OAAO,CAACY,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CADJ,CADR,eAQQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQT,MAAM,CAACU,GAAP,CACI,UAAAC,KAAK;AAAA,wBACL;AAAI,MAAA,GAAG,EAAIA,KAAK,CAACC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAK,CAACC,QAAV,CADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMD,KAAK,CAACE,MAAZ,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMF,KAAK,CAACG,UAAZ,CALJ,CADK;AAAA,GADT,CAFR,CARR,CADJ,CADJ;AA2BH;;AAED,eAAehB,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ModelService from '../../services/ModelService';\r\nimport classes from './ProjectionTable.module.css';\r\nfunction ProjectionTable(props) {\r\n    const [scores, setScores] = useState([]);\r\n    \r\n\r\n   \r\n    useEffect(() => {\r\n       ModelService.getProjectedScores(props.timePeriod, props.matchupPeriod, props.assessInjuries).then((res) => {\r\n           setScores(res.data);\r\n       });\r\n    }, [props.timePeriod, props.assessInjuries, props.matchupPeriod]);\r\n\r\n\r\n    if (typeof scores === 'undefined') {\r\n        return (\r\n            <p>\r\n                loading...\r\n            </p>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <table className={classes.styledtable}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Team Name</th>\r\n                            <th scope=\"col\">Projected Points</th>\r\n                            <th scope=\"col\">Games Left</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                        {\r\n                            scores.map(\r\n                                score => \r\n                                <tr key = {score.teamName}>\r\n                                    <td> \r\n                                        <b>{score.teamName}</b>\r\n                                    </td>\r\n                                    <td> {score.points}</td>\r\n                                    <td> {score.totalGames}</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default ProjectionTable;"]},"metadata":{},"sourceType":"module"}